// Lab_05_5.cpp
// < Величко Іван >
// Лабораторна робота № 5.5
// Рекурсивні функції
// Варіант 0.4

#include <iostream>

using namespace std;

// Функція Аккермана з підрахунком глибини рекурсії
int ackermann(int m, int n, int& depth) {
    depth++;  // Збільшуємо лічильник глибини рекурсії на кожному виклику функції.

    // Якщо m дорівнює 0, повертаємо n + 1, відповідно до правила для функції Аккермана.
    if (m == 0)
        return n + 1;

    // Якщо m > 0 і n дорівнює 0, викликаємо функцію рекурсивно з параметрами m - 1 і 1.
    else if (m > 0 && n == 0)
        return ackermann(m - 1, 1, depth);

    // Якщо m > 0 і n > 0, спочатку рекурсивно викликаємо функцію для A(m, n - 1), 
    // а потім використовуємо цей результат для виклику A(m - 1, ...).
    else
        return ackermann(m - 1, ackermann(m, n - 1, depth), depth);
}

int main() {
    int m, n;

    cout << "m: "; cin >> m;
    cout << "n: "; cin >> n;

    int depth = 0;  // Оголошення змінної для відстеження глибини рекурсії, початкове значення 0.

    // Виклик функції Аккермана з початковими параметрами m, n та глибиною рекурсії.
    int result = ackermann(m, n, depth);

    // Виведення результату функції Аккермана для введених m і n.
    cout << "A(" << m << ", " << n << ") = " << result << endl;

    // Виведення глибини рекурсії, що була досягнута під час обчислення.
    cout << "recurse: " << depth << endl;

    return 0;
}
